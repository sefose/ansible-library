---
- name: ensure wireguard stopped
  command: wg-quick down wg0
  become: yes
  ignore_errors: yes

### ensure private key file 
- name: check for wireguard private server key
  stat:
    path: /etc/wireguard/keys/server.key
  register: private_key_status
  become: yes

- name: ensure wireguard key folder
  file:
    path: /etc/wireguard/keys
    state: directory
  become: yes
  when: not private_key_status.stat.exists

- name: generate wireguard private key
  command: wg genkey
  register: wg_private_key
  when: not private_key_status.stat.exists

- name: write wireguard private key to file
  lineinfile:
    path: /etc/wireguard/keys/server.key
    line: "{{ wg_private_key.stdout }}"
    create: yes
    mode: "600"
  become: yes
  when: not private_key_status.stat.exists

- name: read wireguard private key
  command: cat /etc/wireguard/keys/server.key
  register: wg_private_key
  become: yes

### ensure public key file
- name: check for wireguard public server key
  stat:
    path: /etc/wireguard/keys/server.key.pub
  register: public_key_status
  become: yes

- name: generate wireguard public key
  shell: echo {{ wg_private_key.stdout }} | wg pubkey
  register: wg_public_key
  when: not public_key_status.stat.exists

- name: write wireguard public key to file
  lineinfile:
    path: /etc/wireguard/keys/server.key.pub
    line: "{{ wg_public_key.stdout }}"
    create: yes
  become: yes
  when: not public_key_status.stat.exists

- name: read wireguard ppublic key
  command: cat /etc/wireguard/keys/server.key.pub
  register: wg_public_key
  become: yes


### configuration
- name: get network interface
  shell: ip -o -4 route show to default | awk '{print $5}'
  register: network_interface
  become: yes

- name: create config file
  blockinfile:
    path: /etc/wireguard/wg0.conf
    block: |
      [Interface]
      Address = 10.0.0.1/24
      ListenPort = 51820
      PrivateKey = {{ wg_private_key.stdout }}
      DNS = 192.168.0.3
      PostUp   = iptables -A FORWARD -i %i -j ACCEPT; iptables -A FORWARD -o %i -j ACCEPT; iptables -t nat -A POSTROUTING -o {{ network_interface.stdout }} -j MASQUERADE
      PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -D FORWARD -o %i -j ACCEPT; iptables -t nat -D POSTROUTING -o {{ network_interface.stdout }} -j MASQUERADE
      # [Peer]
      # PublicKey = {{ wg_public_key.stdout }}
      # AllowedIPs = 10.0.0.3/32
    create: yes
    mode: "600"
  become: yes

- name: create symlink for resolvconf
  file:
    src: /usr/bin/resolvectl
    dest: /usr/local/bin/resolvconf
    state: link
  become: yes

- name: create config file
  blockinfile:
    path: /etc/wireguard/clients/client_1.conf
    block: |
      [Interface]
      Address = 10.0.0.3/32
      PrivateKey = {{ wg_private_key.stdout }}
      [Peer]
      PublicKey = {{ wg_public_key.stdout }}
      AllowedIPs = 0.0.0.0/0
      Endpoint = 192.168.0.14:51820
    create: yes
    mode: "600"
  become: yes

- name: start wireguard
  command: wg-quick up wg0
  become: yes 

# - name: create qr-code
#   command: qrencode -t ansiutf8 < /etc/wireguard/wg0.conf